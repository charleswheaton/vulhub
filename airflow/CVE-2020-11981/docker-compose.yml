version: '3'
x-airflow-common:
  image: vulhub/airflow:1.10.10
  environment: &id001
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'true'
    AIRFLOW__API__AUTH_BACKEND: airflow.api.auth.backend.default
  user: ${AIRFLOW_UID:-50000}:${AIRFLOW_GID:-50000}
  depends_on: &id002
    redis:
      condition: service_healthy
    postgres:
      condition: service_healthy
services:
  postgres:
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    healthcheck:
      test:
      - CMD
      - pg_isready
      - -U
      - airflow
      interval: 5s
      retries: 5
    build:
      context: .
      dockerfile: containers/postgres/Dockerfile
  redis:
    ports:
    - target: 6379
      published: 0
      protocol: tcp
    healthcheck:
      test:
      - CMD
      - redis-cli
      - ping
      interval: 5s
      timeout: 30s
      retries: 50
    build:
      context: .
      dockerfile: containers/redis/Dockerfile
  airflow-webserver:
    environment: *id001
    user: ${AIRFLOW_UID:-50000}:${AIRFLOW_GID:-50000}
    depends_on: *id002
    command: webserver
    ports:
    - target: 8080
      published: 0
      protocol: tcp
    healthcheck:
      test:
      - CMD
      - curl
      - --fail
      - http://localhost:8080/health
      interval: 10s
      timeout: 10s
      retries: 5
    build:
      context: .
      dockerfile: containers/airflow-webserver/Dockerfile
  airflow-scheduler:
    environment: *id001
    user: ${AIRFLOW_UID:-50000}:${AIRFLOW_GID:-50000}
    depends_on: *id002
    command: scheduler
    healthcheck:
      test:
      - CMD-SHELL
      - airflow jobs check --job-type SchedulerJob --hostname "$${HOSTNAME}"
      interval: 10s
      timeout: 10s
      retries: 5
    build:
      context: .
      dockerfile: containers/airflow-scheduler/Dockerfile
  airflow-worker:
    environment: *id001
    user: ${AIRFLOW_UID:-50000}:${AIRFLOW_GID:-50000}
    depends_on: *id002
    command: worker
    healthcheck:
      test:
      - CMD-SHELL
      - celery --app airflow.executors.celery_executor.app inspect ping -d "celery@$${HOSTNAME}"
      interval: 10s
      timeout: 10s
      retries: 5
    build:
      context: .
      dockerfile: containers/airflow-worker/Dockerfile
  airflow-init:
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
      AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'true'
      AIRFLOW__API__AUTH_BACKEND: airflow.api.auth.backend.default
      _AIRFLOW_DB_UPGRADE: 'true'
    user: ${AIRFLOW_UID:-50000}:${AIRFLOW_GID:-50000}
    depends_on: *id002
    command: initdb
    build:
      context: .
      dockerfile: containers/airflow-init/Dockerfile
  flower:
    environment: *id001
    user: ${AIRFLOW_UID:-50000}:${AIRFLOW_GID:-50000}
    depends_on: *id002
    command: flower
    ports:
    - target: 5555
      published: 0
      protocol: tcp
    healthcheck:
      test:
      - CMD
      - curl
      - --fail
      - http://localhost:5555/
      interval: 10s
      timeout: 10s
      retries: 5
    build:
      context: .
      dockerfile: containers/flower/Dockerfile
